class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
#         d = {}
        
#         for i in range(len(nums)):
#             d[nums[i]] = i
            
#         for i in range(len(nums)):
#             toFind = target-nums[i]
            
#             if(toFind in d.keys() and d[toFind]!=i):
#                 return sorted([d[nums[i]], d[toFind]])
        
        # this approach doesn't work since the hashmap cant contain the same values twice, it'll update their indices
        # you'll have to check that on the spot
        
        d = {}
        
        for i in range(len(nums)):
            num = nums[i]
            toFind = target-num
        
            if toFind in d:
                return [i, d[toFind]]
            
            d[num] = i

            